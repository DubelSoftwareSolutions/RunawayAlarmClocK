// Generated by gencpp from file low_level/TimeService.msg
// DO NOT EDIT!


#ifndef LOW_LEVEL_MESSAGE_TIMESERVICE_H
#define LOW_LEVEL_MESSAGE_TIMESERVICE_H

#include <ros/service_traits.h>


#include <low_level/TimeServiceRequest.h>
#include <low_level/TimeServiceResponse.h>


namespace low_level
{

struct TimeService
{

typedef TimeServiceRequest Request;
typedef TimeServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TimeService
} // namespace low_level


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::low_level::TimeService > {
  static const char* value()
  {
    return "87ba0ebb6660fa9f2267d4d35e953e92";
  }

  static const char* value(const ::low_level::TimeService&) { return value(); }
};

template<>
struct DataType< ::low_level::TimeService > {
  static const char* value()
  {
    return "low_level/TimeService";
  }

  static const char* value(const ::low_level::TimeService&) { return value(); }
};


// service_traits::MD5Sum< ::low_level::TimeServiceRequest> should match 
// service_traits::MD5Sum< ::low_level::TimeService > 
template<>
struct MD5Sum< ::low_level::TimeServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::low_level::TimeService >::value();
  }
  static const char* value(const ::low_level::TimeServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::low_level::TimeServiceRequest> should match 
// service_traits::DataType< ::low_level::TimeService > 
template<>
struct DataType< ::low_level::TimeServiceRequest>
{
  static const char* value()
  {
    return DataType< ::low_level::TimeService >::value();
  }
  static const char* value(const ::low_level::TimeServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::low_level::TimeServiceResponse> should match 
// service_traits::MD5Sum< ::low_level::TimeService > 
template<>
struct MD5Sum< ::low_level::TimeServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::low_level::TimeService >::value();
  }
  static const char* value(const ::low_level::TimeServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::low_level::TimeServiceResponse> should match 
// service_traits::DataType< ::low_level::TimeService > 
template<>
struct DataType< ::low_level::TimeServiceResponse>
{
  static const char* value()
  {
    return DataType< ::low_level::TimeService >::value();
  }
  static const char* value(const ::low_level::TimeServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LOW_LEVEL_MESSAGE_TIMESERVICE_H
